plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization'
}
//
//ext.getTestTargets = {
//    project.hasProperty("testTargets") ? "\"" + testTargets + "\"" : "\"@all\""
//}
Properties props = new Properties()

def arr = ["FHIR_BASE_URL", "OAUTH_BASE_URL", "OAUTH_CIENT_ID", "OAUTH_CLIENT_SECRET", "OAUTH_SCOPE"]
if (rootProject.file("local.properties").exists()) {
    props.load(rootProject.file("local.properties").newDataInputStream())

    arr.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop == "FHIR_BASE_URL") ? "https://sample.url/fhir/" : "sample"))
    }
} else {
    println("local.properties does not exist. The following values are required " + arr.join(", "))
    arr.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop.contains("URL")) ? "https://sample.url/fhir/" : "sample_" + prop))
    }
}

android {
    compileSdkVersion 30
    dataBinding {
        enabled true
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    aaptOptions {
        cruncherEnabled = false
    }
    defaultConfig {
        applicationId "org.smartregister.fhircore.anc"
        minSdkVersion sdk_versions.min_sdk
        targetSdkVersion sdk_versions.target_sdk
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true
       // testInstrumentationRunner  getInstrumentation()
        testApplicationId "org.smartregister.fhircore.anc.test"
        testInstrumentationRunner "org.smartregister.fhircore.anc.test.CucumberTestRunner"



        buildConfigField("boolean", 'SKIP_AUTH_CHECK', "false")

        buildConfigField("String", 'FHIR_BASE_URL', "\"${FHIR_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_BASE_URL', "\"${OAUTH_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_CIENT_ID', "\"${OAUTH_CIENT_ID}\"")
        buildConfigField("String", 'OAUTH_CLIENT_SECRET', "\"${OAUTH_CLIENT_SECRET}\"")
        buildConfigField("String", 'OAUTH_SCOPE', "\"${OAUTH_SCOPE}\"")


    }
    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'TEST_TAGS', '"' + getTestTags() + '"'
            buildConfigField 'String', 'TEST_SCENARIO', '"' + getTestScenario() + '"'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
    }
    packagingOptions {
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
    }
    buildToolsVersion '30.0.2'
}

def getInstrumentation() {
    project.hasProperty('cucumber') ? 'org.smartregister.fhircore.anc.test.CucumberTestRunner' : 'androidx.test.runner.AndroidJUnitRunner'
}

def getTestTags() {
    project.getProperties().get('tags') ?: ''
}

def getTestScenario() {
    project.getProperties().get('scenario') ?: ''
}

dependencies {
    implementation(project(":engine"))
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    //testImplementation 'junit:junit:4.13.2
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // App dependencies
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'com.google.guava:guava:26.0-android'

    //espresso
    //androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
    //androidTestImplementation "androidx.test:core:1.4.0"
    //androidTestImplementation "androidx.test:runner:1.4.0"
    //androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    //UIAutomator dependency
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'


    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'

    //jetpack
    androidTestImplementation "androidx.compose.ui:ui-test:1.0.2"
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.2'
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.0.2"


    implementation deps.work.runtime
}
