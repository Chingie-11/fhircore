plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.plugin.serialization'
}
apply from: "code.coverage.gradle"

Properties props = new Properties()

def arr = ["FHIR_BASE_URL", "OAUTH_BASE_URL", "OAUTH_CIENT_ID", "OAUTH_CLIENT_SECRET", "OAUTH_SCOPE"]
if (rootProject.file("local.properties").exists()) {
    props.load(rootProject.file("local.properties").newDataInputStream())

    arr.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop == "FHIR_BASE_URL") ? "https://sample.url/fhir/" : "sample"))
    }
} else {
    println("local.properties does not exist. The following values are required " + arr.join(", "))
    arr.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop.contains("URL")) ? "https://sample.url/fhir/" : "sample_" + prop))
    }
}
ext.getTestTargets = {
    project.hasProperty("testTargets") ? "\"" + testTargets + "\"" : "\"@all\""
}


android {
    compileSdkVersion 30

    dataBinding {
        enabled true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }

    }
    defaultConfig {
        applicationId "org.smartregister.fhircore.anc"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true
      //  testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId "org.smartregister.fhircore.anc.test"
        testInstrumentationRunner "org.smartregister.fhircore.anc.test.CucumberTestRunner"
        buildConfigField("boolean", 'SKIP_AUTH_CHECK', "false")
        buildConfigField("String", 'FHIR_BASE_URL', "\"${FHIR_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_BASE_URL', "\"${OAUTH_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_CIENT_ID', "\"${OAUTH_CIENT_ID}\"")
        buildConfigField("String", 'OAUTH_CLIENT_SECRET', "\"${OAUTH_CLIENT_SECRET}\"")
        buildConfigField("String", 'OAUTH_SCOPE', "\"${OAUTH_SCOPE}\"")
    }

    sourceSets{
        main { java.srcDirs = ['src/main/java'] }
        test { java.srcDirs = ['src/test/java'] }
        androidTest { java.srcDirs = ['src/androidTest/java'] }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'TEST_TAGS', '"' + getTestTags() + '"'
            buildConfigField 'String', 'TEST_SCENARIO', '"' + getTestScenario() + '"'
            testCoverageEnabled false

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
    }
    packagingOptions {
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        resources.excludes.add("META-INF/*")
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
}


def getInstrumentation() {
    project.hasProperty('cucumber') ? 'org.smartregister.fhircore.anc.test.CucumberTestRunner' : 'androidx.test.runner.AndroidJUnitRunner'
}

def getTestTags() {
    project.getProperties().get('tags') ?: ''
}

def getTestScenario() {
    project.getProperties().get('scenario') ?: ''
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"
    implementation(project(":engine"))
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

//    androidTestImplementation deps.atsl.ext_junit
//    androidTestImplementation deps.atsl.espresso
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'



    testImplementation deps.junit5_api
    testRuntimeOnly deps.junit5_engine
    testRuntimeOnly deps.junit5_engine_vintage
    testImplementation deps.robolectric
    testImplementation deps.atsl.ext_junit
    testImplementation deps.atsl.ext_junit_ktx
    testImplementation deps.coroutines.test
    testImplementation deps.androidx.core_test
    debugImplementation deps.fragment_testing
    releaseImplementation deps.fragment_testing
    testImplementation deps.mockk

    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.0.2")
// Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.0.2")
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    androidTestImplementation 'androidx.test:core:1.2.0'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test:runner:1.2.0'
//    androidTestImplementation 'androidx.test:rules:1.2.0'
//
//    androidTestImplementation "androidx.test.ext:junit:1.1.2"
//    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
//  //  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    androidTestImplementation'com.android.support.test.espresso:espresso-intents:3.0.2'
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
//    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
//    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'
    // cucumber
  //  androidTestImplementation "io.cucumber:cucumber-android:4.8.4"


    // cucumber
    androidTestImplementation "io.cucumber:cucumber-android:4.8.4"

    // Automation
    androidTestImplementation 'com.schibsted.spain:barista:3.6.0'

    //espresso
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.test:core:1.3.0"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.3.0"

    //UIAutomator dependency
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    androidTestUtil 'androidx.test:orchestrator:1.4.0'

    implementation deps.work.runtime


}